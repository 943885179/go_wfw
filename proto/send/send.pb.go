// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/send/send.proto

package send

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SendType int32

const (
	SendType_PHONE SendType = 0
	SendType_EMAIL SendType = 1
)

var SendType_name = map[int32]string{
	0: "PHONE",
	1: "EMAIL",
}

var SendType_value = map[string]int32{
	"PHONE": 0,
	"EMAIL": 1,
}

func (x SendType) String() string {
	return proto.EnumName(SendType_name, int32(x))
}

func (SendType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_535ada0d8e4e45b5, []int{0}
}

type SendCodeReq struct {
	SendType             SendType `protobuf:"varint,1,opt,name=send_type,json=sendType,proto3,enum=send.SendType" json:"send_type,omitempty"`
	EmailOrPhone         string   `protobuf:"bytes,2,opt,name=email_or_phone,json=emailOrPhone,proto3" json:"email_or_phone,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendCodeReq) Reset()         { *m = SendCodeReq{} }
func (m *SendCodeReq) String() string { return proto.CompactTextString(m) }
func (*SendCodeReq) ProtoMessage()    {}
func (*SendCodeReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_535ada0d8e4e45b5, []int{0}
}

func (m *SendCodeReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendCodeReq.Unmarshal(m, b)
}
func (m *SendCodeReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendCodeReq.Marshal(b, m, deterministic)
}
func (m *SendCodeReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendCodeReq.Merge(m, src)
}
func (m *SendCodeReq) XXX_Size() int {
	return xxx_messageInfo_SendCodeReq.Size(m)
}
func (m *SendCodeReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SendCodeReq.DiscardUnknown(m)
}

var xxx_messageInfo_SendCodeReq proto.InternalMessageInfo

func (m *SendCodeReq) GetSendType() SendType {
	if m != nil {
		return m.SendType
	}
	return SendType_PHONE
}

func (m *SendCodeReq) GetEmailOrPhone() string {
	if m != nil {
		return m.EmailOrPhone
	}
	return ""
}

type SendCodeResp struct {
	Code                 string   `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendCodeResp) Reset()         { *m = SendCodeResp{} }
func (m *SendCodeResp) String() string { return proto.CompactTextString(m) }
func (*SendCodeResp) ProtoMessage()    {}
func (*SendCodeResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_535ada0d8e4e45b5, []int{1}
}

func (m *SendCodeResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendCodeResp.Unmarshal(m, b)
}
func (m *SendCodeResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendCodeResp.Marshal(b, m, deterministic)
}
func (m *SendCodeResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendCodeResp.Merge(m, src)
}
func (m *SendCodeResp) XXX_Size() int {
	return xxx_messageInfo_SendCodeResp.Size(m)
}
func (m *SendCodeResp) XXX_DiscardUnknown() {
	xxx_messageInfo_SendCodeResp.DiscardUnknown(m)
}

var xxx_messageInfo_SendCodeResp proto.InternalMessageInfo

func (m *SendCodeResp) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

type CodeVerifyReq struct {
	SendType             SendType `protobuf:"varint,1,opt,name=send_type,json=sendType,proto3,enum=send.SendType" json:"send_type,omitempty"`
	EmailOrPhone         string   `protobuf:"bytes,2,opt,name=email_or_phone,json=emailOrPhone,proto3" json:"email_or_phone,omitempty"`
	Code                 string   `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CodeVerifyReq) Reset()         { *m = CodeVerifyReq{} }
func (m *CodeVerifyReq) String() string { return proto.CompactTextString(m) }
func (*CodeVerifyReq) ProtoMessage()    {}
func (*CodeVerifyReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_535ada0d8e4e45b5, []int{2}
}

func (m *CodeVerifyReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CodeVerifyReq.Unmarshal(m, b)
}
func (m *CodeVerifyReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CodeVerifyReq.Marshal(b, m, deterministic)
}
func (m *CodeVerifyReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CodeVerifyReq.Merge(m, src)
}
func (m *CodeVerifyReq) XXX_Size() int {
	return xxx_messageInfo_CodeVerifyReq.Size(m)
}
func (m *CodeVerifyReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CodeVerifyReq.DiscardUnknown(m)
}

var xxx_messageInfo_CodeVerifyReq proto.InternalMessageInfo

func (m *CodeVerifyReq) GetSendType() SendType {
	if m != nil {
		return m.SendType
	}
	return SendType_PHONE
}

func (m *CodeVerifyReq) GetEmailOrPhone() string {
	if m != nil {
		return m.EmailOrPhone
	}
	return ""
}

func (m *CodeVerifyReq) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

type CodeVerifyResp struct {
	Verify               bool     `protobuf:"varint,1,opt,name=verify,proto3" json:"verify,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CodeVerifyResp) Reset()         { *m = CodeVerifyResp{} }
func (m *CodeVerifyResp) String() string { return proto.CompactTextString(m) }
func (*CodeVerifyResp) ProtoMessage()    {}
func (*CodeVerifyResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_535ada0d8e4e45b5, []int{3}
}

func (m *CodeVerifyResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CodeVerifyResp.Unmarshal(m, b)
}
func (m *CodeVerifyResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CodeVerifyResp.Marshal(b, m, deterministic)
}
func (m *CodeVerifyResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CodeVerifyResp.Merge(m, src)
}
func (m *CodeVerifyResp) XXX_Size() int {
	return xxx_messageInfo_CodeVerifyResp.Size(m)
}
func (m *CodeVerifyResp) XXX_DiscardUnknown() {
	xxx_messageInfo_CodeVerifyResp.DiscardUnknown(m)
}

var xxx_messageInfo_CodeVerifyResp proto.InternalMessageInfo

func (m *CodeVerifyResp) GetVerify() bool {
	if m != nil {
		return m.Verify
	}
	return false
}

type SendReq struct {
	SendType             SendType `protobuf:"varint,1,opt,name=send_type,json=sendType,proto3,enum=send.SendType" json:"send_type,omitempty"`
	EmailOrPhone         string   `protobuf:"bytes,2,opt,name=email_or_phone,json=emailOrPhone,proto3" json:"email_or_phone,omitempty"`
	Msg                  string   `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendReq) Reset()         { *m = SendReq{} }
func (m *SendReq) String() string { return proto.CompactTextString(m) }
func (*SendReq) ProtoMessage()    {}
func (*SendReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_535ada0d8e4e45b5, []int{4}
}

func (m *SendReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendReq.Unmarshal(m, b)
}
func (m *SendReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendReq.Marshal(b, m, deterministic)
}
func (m *SendReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendReq.Merge(m, src)
}
func (m *SendReq) XXX_Size() int {
	return xxx_messageInfo_SendReq.Size(m)
}
func (m *SendReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SendReq.DiscardUnknown(m)
}

var xxx_messageInfo_SendReq proto.InternalMessageInfo

func (m *SendReq) GetSendType() SendType {
	if m != nil {
		return m.SendType
	}
	return SendType_PHONE
}

func (m *SendReq) GetEmailOrPhone() string {
	if m != nil {
		return m.EmailOrPhone
	}
	return ""
}

func (m *SendReq) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type SendAllReq struct {
	SendType             SendType `protobuf:"varint,1,opt,name=send_type,json=sendType,proto3,enum=send.SendType" json:"send_type,omitempty"`
	EmailOrPhone         []string `protobuf:"bytes,2,rep,name=email_or_phone,json=emailOrPhone,proto3" json:"email_or_phone,omitempty"`
	Msg                  string   `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendAllReq) Reset()         { *m = SendAllReq{} }
func (m *SendAllReq) String() string { return proto.CompactTextString(m) }
func (*SendAllReq) ProtoMessage()    {}
func (*SendAllReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_535ada0d8e4e45b5, []int{5}
}

func (m *SendAllReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendAllReq.Unmarshal(m, b)
}
func (m *SendAllReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendAllReq.Marshal(b, m, deterministic)
}
func (m *SendAllReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendAllReq.Merge(m, src)
}
func (m *SendAllReq) XXX_Size() int {
	return xxx_messageInfo_SendAllReq.Size(m)
}
func (m *SendAllReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SendAllReq.DiscardUnknown(m)
}

var xxx_messageInfo_SendAllReq proto.InternalMessageInfo

func (m *SendAllReq) GetSendType() SendType {
	if m != nil {
		return m.SendType
	}
	return SendType_PHONE
}

func (m *SendAllReq) GetEmailOrPhone() []string {
	if m != nil {
		return m.EmailOrPhone
	}
	return nil
}

func (m *SendAllReq) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func init() {
	proto.RegisterEnum("send.SendType", SendType_name, SendType_value)
	proto.RegisterType((*SendCodeReq)(nil), "send.SendCodeReq")
	proto.RegisterType((*SendCodeResp)(nil), "send.SendCodeResp")
	proto.RegisterType((*CodeVerifyReq)(nil), "send.CodeVerifyReq")
	proto.RegisterType((*CodeVerifyResp)(nil), "send.CodeVerifyResp")
	proto.RegisterType((*SendReq)(nil), "send.SendReq")
	proto.RegisterType((*SendAllReq)(nil), "send.SendAllReq")
}

func init() { proto.RegisterFile("proto/send/send.proto", fileDescriptor_535ada0d8e4e45b5) }

var fileDescriptor_535ada0d8e4e45b5 = []byte{
	// 357 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x53, 0xc1, 0x4e, 0xc2, 0x40,
	0x10, 0xa5, 0x82, 0x48, 0x47, 0x68, 0xea, 0xa8, 0x84, 0xe0, 0x85, 0x6c, 0x3c, 0x10, 0x4d, 0xda,
	0x04, 0xe2, 0xc1, 0x23, 0x1a, 0x12, 0x4d, 0x54, 0x48, 0x31, 0x1e, 0xbc, 0xa0, 0xd8, 0x05, 0x49,
	0x4a, 0x77, 0x69, 0x91, 0xa4, 0x9f, 0xeb, 0x9f, 0x98, 0xd9, 0x2d, 0x16, 0x35, 0xc6, 0x8b, 0x5c,
	0xc8, 0xcc, 0xdb, 0x37, 0xef, 0xbd, 0x0c, 0x53, 0x38, 0x94, 0x91, 0x58, 0x08, 0x37, 0xe6, 0xa1,
	0xaf, 0x7e, 0x1c, 0xd5, 0x63, 0x81, 0xea, 0xfa, 0xd1, 0x44, 0x88, 0x49, 0xc0, 0x5d, 0x85, 0x8d,
	0xde, 0xc6, 0x2e, 0x9f, 0xc9, 0x45, 0xa2, 0x29, 0xec, 0x09, 0x76, 0x07, 0x3c, 0xf4, 0x2f, 0x85,
	0xcf, 0x3d, 0x3e, 0xc7, 0x53, 0x30, 0x69, 0x66, 0xb8, 0x48, 0x24, 0xaf, 0x19, 0x0d, 0xa3, 0x69,
	0xb5, 0x2c, 0x47, 0x29, 0x12, 0xeb, 0x3e, 0x91, 0xdc, 0x2b, 0xc5, 0x69, 0x85, 0xc7, 0x60, 0xf1,
	0xd9, 0xf3, 0x34, 0x18, 0x8a, 0x68, 0x28, 0x5f, 0x45, 0xc8, 0x6b, 0x5b, 0x0d, 0xa3, 0x69, 0x7a,
	0x65, 0x85, 0xf6, 0xa2, 0x3e, 0x61, 0x8c, 0x41, 0x39, 0x73, 0x88, 0x25, 0x22, 0x14, 0x5e, 0x84,
	0xaf, 0xd5, 0x4d, 0x4f, 0xd5, 0x6c, 0x09, 0x15, 0x7a, 0x7f, 0xe0, 0xd1, 0x74, 0x9c, 0x6c, 0x26,
	0xc7, 0xa7, 0x6f, 0x7e, 0xcd, 0xb7, 0x09, 0xd6, 0xba, 0x6f, 0x2c, 0xb1, 0x0a, 0xc5, 0xa5, 0xea,
	0x94, 0x6b, 0xc9, 0x4b, 0x3b, 0x16, 0xc2, 0x0e, 0x39, 0x6f, 0x28, 0x9b, 0x0d, 0xf9, 0x59, 0x3c,
	0x49, 0xa3, 0x51, 0xc9, 0xe6, 0x00, 0xa4, 0xd6, 0x09, 0x82, 0x7f, 0xb1, 0xcc, 0xff, 0x6d, 0x79,
	0xd2, 0x80, 0xd2, 0x4a, 0x0d, 0x4d, 0xd8, 0xee, 0x5f, 0xf5, 0xee, 0xba, 0x76, 0x8e, 0xca, 0xee,
	0x6d, 0xe7, 0xfa, 0xc6, 0x36, 0x5a, 0xef, 0x86, 0xde, 0xc2, 0x20, 0x5a, 0x62, 0x5b, 0xb3, 0x69,
	0x7d, 0xb8, 0x97, 0x65, 0x49, 0x0f, 0xa9, 0x8e, 0xdf, 0xa1, 0x58, 0xb2, 0x1c, 0x9e, 0x03, 0x64,
	0xfb, 0xc6, 0x7d, 0xcd, 0xf9, 0xf2, 0xcf, 0xd7, 0x0f, 0x7e, 0x82, 0x6a, 0xd4, 0x85, 0x02, 0x89,
	0x61, 0x25, 0x13, 0x26, 0x7a, 0xd5, 0xd1, 0xd7, 0xed, 0xac, 0xae, 0xdb, 0xe9, 0xd2, 0x75, 0xb3,
	0x1c, 0x9e, 0xe9, 0xac, 0x9d, 0x20, 0x40, 0x3b, 0x9b, 0xd1, 0x0b, 0xfd, 0x7d, 0xec, 0xa2, 0xf8,
	0xa8, 0xbe, 0x9a, 0x51, 0x51, 0xbd, 0xb4, 0x3f, 0x02, 0x00, 0x00, 0xff, 0xff, 0x22, 0x3b, 0xde,
	0x7a, 0x5b, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SendSrvClient is the client API for SendSrv service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SendSrvClient interface {
	SendCode(ctx context.Context, in *SendCodeReq, opts ...grpc.CallOption) (*SendCodeResp, error)
	CodeVerify(ctx context.Context, in *CodeVerifyReq, opts ...grpc.CallOption) (*CodeVerifyResp, error)
	Send(ctx context.Context, in *SendReq, opts ...grpc.CallOption) (*empty.Empty, error)
	SendAll(ctx context.Context, in *SendAllReq, opts ...grpc.CallOption) (*empty.Empty, error)
}

type sendSrvClient struct {
	cc *grpc.ClientConn
}

func NewSendSrvClient(cc *grpc.ClientConn) SendSrvClient {
	return &sendSrvClient{cc}
}

func (c *sendSrvClient) SendCode(ctx context.Context, in *SendCodeReq, opts ...grpc.CallOption) (*SendCodeResp, error) {
	out := new(SendCodeResp)
	err := c.cc.Invoke(ctx, "/send.SendSrv/SendCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sendSrvClient) CodeVerify(ctx context.Context, in *CodeVerifyReq, opts ...grpc.CallOption) (*CodeVerifyResp, error) {
	out := new(CodeVerifyResp)
	err := c.cc.Invoke(ctx, "/send.SendSrv/CodeVerify", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sendSrvClient) Send(ctx context.Context, in *SendReq, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/send.SendSrv/Send", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sendSrvClient) SendAll(ctx context.Context, in *SendAllReq, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/send.SendSrv/SendAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SendSrvServer is the server API for SendSrv service.
type SendSrvServer interface {
	SendCode(context.Context, *SendCodeReq) (*SendCodeResp, error)
	CodeVerify(context.Context, *CodeVerifyReq) (*CodeVerifyResp, error)
	Send(context.Context, *SendReq) (*empty.Empty, error)
	SendAll(context.Context, *SendAllReq) (*empty.Empty, error)
}

// UnimplementedSendSrvServer can be embedded to have forward compatible implementations.
type UnimplementedSendSrvServer struct {
}

func (*UnimplementedSendSrvServer) SendCode(ctx context.Context, req *SendCodeReq) (*SendCodeResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendCode not implemented")
}
func (*UnimplementedSendSrvServer) CodeVerify(ctx context.Context, req *CodeVerifyReq) (*CodeVerifyResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CodeVerify not implemented")
}
func (*UnimplementedSendSrvServer) Send(ctx context.Context, req *SendReq) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Send not implemented")
}
func (*UnimplementedSendSrvServer) SendAll(ctx context.Context, req *SendAllReq) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendAll not implemented")
}

func RegisterSendSrvServer(s *grpc.Server, srv SendSrvServer) {
	s.RegisterService(&_SendSrv_serviceDesc, srv)
}

func _SendSrv_SendCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendCodeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SendSrvServer).SendCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/send.SendSrv/SendCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SendSrvServer).SendCode(ctx, req.(*SendCodeReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _SendSrv_CodeVerify_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CodeVerifyReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SendSrvServer).CodeVerify(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/send.SendSrv/CodeVerify",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SendSrvServer).CodeVerify(ctx, req.(*CodeVerifyReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _SendSrv_Send_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SendSrvServer).Send(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/send.SendSrv/Send",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SendSrvServer).Send(ctx, req.(*SendReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _SendSrv_SendAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendAllReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SendSrvServer).SendAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/send.SendSrv/SendAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SendSrvServer).SendAll(ctx, req.(*SendAllReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _SendSrv_serviceDesc = grpc.ServiceDesc{
	ServiceName: "send.SendSrv",
	HandlerType: (*SendSrvServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendCode",
			Handler:    _SendSrv_SendCode_Handler,
		},
		{
			MethodName: "CodeVerify",
			Handler:    _SendSrv_CodeVerify_Handler,
		},
		{
			MethodName: "Send",
			Handler:    _SendSrv_Send_Handler,
		},
		{
			MethodName: "SendAll",
			Handler:    _SendSrv_SendAll_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/send/send.proto",
}
